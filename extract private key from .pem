from cryptography.hazmat.primitives import serialization
import base64

# Function to extract private key d from PEM file
def extract_private_key_d_from_pem(pem_filename):
    with open(pem_filename, 'rb') as f:
        pem_data = f.read()

    # Decode PEM data
    pem_lines = pem_data.decode('utf-8').splitlines()
    pem_content = ''.join(pem_lines[1:-1])  # Exclude header and footer lines

    # Decode Base64 and parse DER format
    der_bytes = base64.b64decode(pem_content)
    private_key = serialization.load_der_private_key(der_bytes, password=None)

    # Extract private key components
    private_numbers = private_key.private_numbers()
    d = private_numbers.d

    return d

# Example usage
pem_filename = 'private_key.pem'
private_key_d = extract_private_key_d_from_pem(pem_filename)
print("Private key d:", private_key_d)
